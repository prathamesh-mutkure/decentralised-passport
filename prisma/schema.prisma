// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Post {
    id        Int      @id @default(autoincrement())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([name])
}

model User {
    id          String @id @default(cuid())
    name        String
    clerkUserId String @unique

    email String   @unique
    phone String?  @unique
    dob   DateTime

    wallet_address String? @db.VarChar(100)

    country     String? @db.VarChar(50)
    region      String? @db.VarChar(150)
    city        String? @db.VarChar(150)
    postal_code String? @db.VarChar(20)
    address     String? @db.Text

    nationalIdType String?
    nationalId     String?

    isProfileCreated  Boolean @default(false)
    isProfileVerified Boolean @default(false)

    entires         PassportEntry[]
    VisaApplication VisaApplication[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model PassportEntry {
    id String @id @default(cuid())

    country   String
    validFrom DateTime
    validTill DateTime

    entryDate DateTime
    exitDate  DateTime

    User   User   @relation(fields: [userId], references: [id])
    userId String

    visaApplication   VisaApplication @relation(fields: [visaApplicationId], references: [id])
    visaApplicationId String          @unique

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([userId])
}

enum VisaApplicationStatus {
    DRAFT
    SUBMITTED
    ACCEPTED
    REJECTED
}

model VisaApplication {
    id String @id @default(cuid())

    country       String
    entryDate     DateTime
    exitDate      DateTime
    supportingDoc String

    status VisaApplicationStatus @default(SUBMITTED)

    User   User   @relation(fields: [userId], references: [id])
    userId String

    createdAt     DateTime       @default(now())
    updatedAt     DateTime       @updatedAt
    PassportEntry PassportEntry?

    @@index([userId])
}
